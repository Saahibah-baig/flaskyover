import React, { useState } from 'react';
import './user.css';
import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';
import { faUser } from '@fortawesome/free-solid-svg-icons';
import usersData from './profile.json'; 
const User = () => {
  const [userList, setUserList] = useState(usersData);

  const updateUserStatus = (id, status) => {
    setUserList(userList.map(user => user.id === id ? { ...user, status } : user));
  };

  const handleAccept = (id) => {
    updateUserStatus(id, 'accepted');
  };

  const handleDecline = (id) => {
    updateUserStatus(id, 'declined');
  };

  const handleBlock = (id) => {
    updateUserStatus(id, 'blocked');
  };

  const handleRemove = (id) => {
    setUserList(userList.filter(user => user.id !== id));
  };

  return (
    <div className="management-container">
      <h2 className="title">User Management</h2>
      <ul className="user-list">
        {userList.map(user => (
          <li key={user.id} className="user-item">
            <div className="user-name">
              <FontAwesomeIcon icon={faUser} className="user-name-icon" />
              {user.username}
              <div className="tooltip-card">
                <p><strong>Username:</strong> {user.username}</p>
                <p><strong>Role:</strong> {user.role}</p>
                <p><strong>Email:</strong> {user.email}</p>
                <p><strong>Line of Business:</strong> {user.lineOfBusiness}</p>
                <p><strong>Sub Line of Business:</strong> {user.subLineOfBusiness}</p>
                <p><strong>Reports to:</strong> {user.manager}</p>
              </div>
            </div>
            <div className="button-group">
              {user.status === 'pending' && (
                <>
                  <button
                    className="button accept-button"
                    onClick={() => handleAccept(user.id)}
                  >
                    Accept
                  </button>
                  <button
                    className="button decline-button"
                    onClick={() => handleDecline(user.id)}
                  >
                    Decline
                  </button>
                </>
              )}
              {user.status === 'accepted' && (
                <button
                  className="button block-button"
                  onClick={() => handleBlock(user.id)}
                >
                  Block
                </button>
              )}
              {user.status !== 'pending' && (
                <button
                  className="button remove-button"
                  onClick={() => handleRemove(user.id)}
                >
                  Remove
                </button>
              )}
            </div>
          </li>
        ))}
      </ul>
    </div>
  );
};

export default User;


:root {
    --primary-color: #a51d2d; 
    --secondary-color: #ffd700; 
    --background-color: #f1f1f1;
    --text-color: #333;
    --border-radius: 8px;
    --box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    --transition-speed: 0.3s;
  }
  
  body {
    font-family: 'Arial', sans-serif;
    background-color: var(--background-color);
    color: var(--text-color);
    margin: 0;
    padding: 0;
  }
  
  .management-container {
    background-color: #fff;
    padding: 20px;
    border-radius: var(--border-radius);
    max-width: 800px;
    margin: 40px auto;
    box-shadow: var(--box-shadow);
  }
  
  .title {
    color: var(--primary-color);
    text-align: center;
    font-family: 'Helvetica', sans-serif;
    margin-bottom: 20px;
    font-size: 1.5em;
    position: relative;
  }
  
  .title::after {
    content: "";
    display: block;
    width: 50px;
    height: 4px;
    background: var(--secondary-color);
    margin: 8px auto;
    border-radius: 2px;
  }
  
  .user-list {
    list-style: none;
    padding: 0;
  }
  
  .user-item {
    background-color: #fff;
    padding: 15px;
    border: 1px solid #ddd;
    border-radius: var(--border-radius);
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 10px;
    box-shadow: var(--box-shadow);
    position: relative;
    transition: box-shadow var(--transition-speed);
  }
  
  .user-item:hover {
    box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  }
  
  .user-name {
    font-family: 'Arial', sans-serif;
    color: var(--text-color);
    position: relative;
    display: flex;
    align-items: center;
  }
  
  .user-name-icon {
    margin-right: 10px;
    color: var(--primary-color);
    font-size: 1.5em;
  }
  
  .button-group {
    display: flex;
    gap: 10px;
  }
  
  .button {
    padding: 8px 12px;
    border: none;
    border-radius: var(--border-radius);
    cursor: pointer;
    font-family: 'Arial', sans-serif;
    transition: background-color var(--transition-speed);
    color: #fff;
  }
  
  .accept-button {
    background-color: #1b5e20; 
  }
  
  .accept-button:hover {
    background-color: #144d14;
  }
  
  .decline-button {
    background-color: #d32f2f; 
  }
  
  .decline-button:hover {
    background-color: #b71c1c;
  }
  
  .block-button {
    background-color: #ffab00; 
  }
  
  .block-button:hover {
    background-color: #ff8f00;
  }
  
  .remove-button {
    background-color: #757575; 
  }
  
  .remove-button:hover {
    background-color: #616161;
  }
  
  .tooltip-card {
    position: absolute;
    background-color: #fff;
    border: 1px solid #ddd;
    box-shadow: var(--box-shadow);
    border-radius: var(--border-radius);
    padding: 15px;
    top: 40px; 
    left: 50%;
    transform: translateX(-50%);
    z-index: 1000;
    pointer-events: none; 
    transition: opacity 0.5s ease, visibility 0.5s ease;
    opacity: 0;
    visibility: hidden;
  }
  
  .user-name:hover .tooltip-card, .user-name-icon:hover + .tooltip-card {
    opacity: 1;
    visibility: visible;
  }
  
  .tooltip-card p {
    margin: 5px 0;
    font-family: 'Arial', sans-serif;
    color: var(--text-color);
  }
  [
    {
      "id": 1,
      "username": "johndoe",
      "email": "johndoe@example.com",
      "status": "pending",
      "role": "Developer",
      "lineOfBusiness": "IT",
      "subLineOfBusiness": "Software Development",
      "manager": "Jane Smith"
    },
    {
      "id": 2,
      "username": "janedoe",
      "email": "janedoe@example.com",
      "status": "accepted",
      "role": "Project Manager",
      "lineOfBusiness": "IT",
      "subLineOfBusiness": "Project Management",
      "manager": "John Smith"
    }
  ]
  
